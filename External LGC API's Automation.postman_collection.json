{
	"info": {
		"_postman_id": "92275832-ee77-4177-bff1-5263d80478de",
		"name": "External LGC API's Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25210102"
	},
	"item": [
		{
			"name": "Create Gift Card API Test Cases",
			"item": [
				{
					"name": "Pass -  GC Creation Succesful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"pm.test(\"firstName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
									"});\r",
									"\r",
									"pm.test(\"lastName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
									"});\r",
									"\r",
									"pm.test(\"mobileNumber\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
									"});\r",
									"\r",
									"pm.test(\"email\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
									"});\r",
									"\r",
									"pm.test(\"categoryName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
									"});\r",
									"\r",
									"pm.test(\"lgcNumber\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
									"});\r",
									"\r",
									"pm.test(\"lgcValue\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
									"});\r",
									"\r",
									"pm.test(\"status\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
									"});\r",
									"\r",
									"pm.test(\"pin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
									"});\r",
									"\r",
									"pm.test(\"lifafaOrderID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Total Amount Mismatch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Mismatch in total amount and denomination\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 1,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - User First Name Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"userDetails.firstName NULL value found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 1,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - User Phone Number Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Array value found, but an object is required\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 1,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": ,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - User Email ID Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"userDetails.email NULL value found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Product Category Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"No subcategory found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Sender First Name Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"senderDetails.firstName NULL value found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Sender Email ID Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"senderDetails.email NULL value found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9828202800,\r\n      \"email\": \"\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Sender Phone Number Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Array value found, but an object is required\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": ,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Invalid Merchant ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Invalid credentials\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Partner credentials do not match\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108008",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9828202800,\r\n      \"email\": \"\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Invalid Merchant Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Invalid credentials\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Partner credentials do not match\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNII",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9828202800,\r\n      \"email\": \"\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Invalid Shopcode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Invalid shopcode\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Provided shopcode does not match with Partner shopcode\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9828202800,\r\n      \"email\": \"\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Invalid API Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Version not supported\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Current version of API is not supported\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v1.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "2",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9828202800,\r\n      \"email\": \"\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail - Invalid Flow Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Invalid flow\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Current flow is not supported for this request\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "merchantid",
								"value": "INBLR2108007",
								"type": "text"
							},
							{
								"key": "merchantpassword",
								"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
								"type": "text"
							},
							{
								"key": "merchantshopcode",
								"value": "Test - Xpress Mart-shopcode",
								"type": "text"
							},
							{
								"key": "apiversion",
								"value": "v2.0",
								"type": "text"
							},
							{
								"key": "flowtype",
								"value": "3",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9828202800,\r\n      \"email\": \"\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "https://api.lifafa.team/gc-issuance/v2/create",
							"protocol": "https",
							"host": [
								"api",
								"lifafa",
								"team"
							],
							"path": [
								"gc-issuance",
								"v2",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Balance Check API Test Cases",
			"item": [
				{
					"name": "Pass -  Balance Check Succesful",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusMessage\": {\r\n        \"code\": \"200\",\r\n        \"message\": \"success\",\r\n        \"description\": \"Giftcard details fetched successfully.\"\r\n    },\r\n    \"currency\": \"INR\",\r\n    \"lgcNumber\": \"7551046340937389\",\r\n    \"productType\": \"All\",\r\n    \"numberOfRedemptionRemaining\": 10,\r\n    \"deliveryDate\": \"2023-01-24\",\r\n    \"expiryDate\": \"2024-01-24\",\r\n    \"status\": \"1\",\r\n    \"lgcValue\": \"10.00\",\r\n    \"redeemAuthType\": \"PIN\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Validate Gift Card API Test Cases",
			"item": [
				{
					"name": "Pass -  GC Validation Succesful",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusMessage\": {\r\n        \"code\": \"200\",\r\n        \"message\": \"success\",\r\n        \"description\": \"Giftcard details fetched successfully.\"\r\n    },\r\n    \"currency\": \"INR\",\r\n    \"lgcNumber\": \"7551046340937389\",\r\n    \"productType\": \"All\",\r\n    \"numberOfRedemptionRemaining\": 10,\r\n    \"deliveryDate\": \"2023-01-24\",\r\n    \"expiryDate\": \"2024-01-24\",\r\n    \"status\": \"1\",\r\n    \"lgcValue\": \"10.00\",\r\n    \"redeemAuthType\": \"PIN\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - GC Validation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard validated successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"txnValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"txnUniqueId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnUniqueId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"bookingId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.bookingId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafatxnId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lifafatxnId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"attemptPin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.attemptPin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"remainingAmount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.remainingAmount).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemtionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].numberOfRedemtionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lifafatxnId\", jsonData.lifafatxnId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"1\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Nikhil Kumar\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"iPhone\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail -  LGC Number  Not Found",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusMessage\": {\r\n        \"code\": \"200\",\r\n        \"message\": \"success\",\r\n        \"description\": \"Giftcard details fetched successfully.\"\r\n    },\r\n    \"currency\": \"INR\",\r\n    \"lgcNumber\": \"7551046340937389\",\r\n    \"productType\": \"All\",\r\n    \"numberOfRedemptionRemaining\": 10,\r\n    \"deliveryDate\": \"2023-01-24\",\r\n    \"expiryDate\": \"2024-01-24\",\r\n    \"status\": \"1\",\r\n    \"lgcValue\": \"10.00\",\r\n    \"redeemAuthType\": \"PIN\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail -  LGC Number  Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Trying to get property 'merchant_unique_id' of non-object\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Nikhil Kumar\",\r\n   \"lgcNumber\": \"\",\r\n   \"productType\":\"iPhone\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail -  Product Type  Not Found",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusMessage\": {\r\n        \"code\": \"200\",\r\n        \"message\": \"success\",\r\n        \"description\": \"Giftcard details fetched successfully.\"\r\n    },\r\n    \"currency\": \"INR\",\r\n    \"lgcNumber\": \"7551046340937389\",\r\n    \"productType\": \"All\",\r\n    \"numberOfRedemptionRemaining\": 10,\r\n    \"deliveryDate\": \"2023-01-24\",\r\n    \"expiryDate\": \"2024-01-24\",\r\n    \"status\": \"1\",\r\n    \"lgcValue\": \"10.00\",\r\n    \"redeemAuthType\": \"PIN\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail -  Product Type  Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"509\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Validation for one or more cards failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Out of the total Giftcards provided,the validation for one or more cards failed\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"1\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Nikhil Kumar\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail -  Invalid Merchand ID",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusMessage\": {\r\n        \"code\": \"200\",\r\n        \"message\": \"success\",\r\n        \"description\": \"Giftcard details fetched successfully.\"\r\n    },\r\n    \"currency\": \"INR\",\r\n    \"lgcNumber\": \"7551046340937389\",\r\n    \"productType\": \"All\",\r\n    \"numberOfRedemptionRemaining\": 10,\r\n    \"deliveryDate\": \"2023-01-24\",\r\n    \"expiryDate\": \"2024-01-24\",\r\n    \"status\": \"1\",\r\n    \"lgcValue\": \"10.00\",\r\n    \"redeemAuthType\": \"PIN\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail -  Invalid Merchand ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"201\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid credentials\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Partner credentials do not match\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108008",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLB",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Nikhil Kumar\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail -  Invalid Merchand Password",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusMessage\": {\r\n        \"code\": \"200\",\r\n        \"message\": \"success\",\r\n        \"description\": \"Giftcard details fetched successfully.\"\r\n    },\r\n    \"currency\": \"INR\",\r\n    \"lgcNumber\": \"7551046340937389\",\r\n    \"productType\": \"All\",\r\n    \"numberOfRedemptionRemaining\": 10,\r\n    \"deliveryDate\": \"2023-01-24\",\r\n    \"expiryDate\": \"2024-01-24\",\r\n    \"status\": \"1\",\r\n    \"lgcValue\": \"10.00\",\r\n    \"redeemAuthType\": \"PIN\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail -  Invalid Merchand Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"201\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid credentials\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Partner credentials do not match\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLB",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Nikhil Kumar\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail -  Invalid API Version",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusMessage\": {\r\n        \"code\": \"200\",\r\n        \"message\": \"success\",\r\n        \"description\": \"Giftcard details fetched successfully.\"\r\n    },\r\n    \"currency\": \"INR\",\r\n    \"lgcNumber\": \"7551046340937389\",\r\n    \"productType\": \"All\",\r\n    \"numberOfRedemptionRemaining\": 10,\r\n    \"deliveryDate\": \"2023-01-24\",\r\n    \"expiryDate\": \"2024-01-24\",\r\n    \"status\": \"1\",\r\n    \"lgcValue\": \"10.00\",\r\n    \"redeemAuthType\": \"PIN\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail -  Invalid API Version",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"204\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Version not supported\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Current version of API is not supported\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v1.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Nikhil Kumar\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail -  Invalid Flow Type",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusMessage\": {\r\n        \"code\": \"200\",\r\n        \"message\": \"success\",\r\n        \"description\": \"Giftcard details fetched successfully.\"\r\n    },\r\n    \"currency\": \"INR\",\r\n    \"lgcNumber\": \"7551046340937389\",\r\n    \"productType\": \"All\",\r\n    \"numberOfRedemptionRemaining\": 10,\r\n    \"deliveryDate\": \"2023-01-24\",\r\n    \"expiryDate\": \"2024-01-24\",\r\n    \"status\": \"1\",\r\n    \"lgcValue\": \"10.00\",\r\n    \"redeemAuthType\": \"PIN\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail -  Invalid Flow Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"205\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid flow\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Current flow is not supported for this request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "1",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Nikhil Kumar\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Redeem Gift Card API Test Cases",
			"item": [
				{
					"name": "Pass -  GC Redeemption Succesful",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - GC Validation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard validated successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"txnValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"txnUniqueId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnUniqueId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"bookingId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.bookingId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafatxnId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lifafatxnId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"attemptPin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.attemptPin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"remainingAmount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.remainingAmount).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemtionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].numberOfRedemtionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lifafaTxnId\", jsonData.lifafaTxnId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"1\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Shagun Chauhan\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"iPhone\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - GC Redeemption Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lifafaTxnId\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"pin\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"PIN has been verified and redeemed successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"txnUniqueId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnUniqueId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"txnValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"bookingId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.bookingId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaTxnId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lifafaTxnId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"attemptPin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.attemptPin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"remainingAmount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.remainingAmount).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemtionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].numberOfRedemtionRemaining).to.be.string\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n  \"txnValue\" : \"1\",\r\n  \"txnUniqueId\": \"pay_txn_id1\",\r\n  \"bookingId\" : \"order_id1\",\r\n  \"lgcNumber\": [\"{{lgcNumber}}\"],\r\n  \"lifafaTxnId\":\"{{lifafaTxnId}}\",\r\n  \"pin\": [\"{{pin}}\"],\r\n  \"productType\":\"iPhone\",\r\n  \"txnChannel\" : \"B2C\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/redeem",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"redeem"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail - Invalid Transaction unique ID",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - GC Validation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard validated successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"txnValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"txnUniqueId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnUniqueId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"bookingId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.bookingId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafatxnId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lifafatxnId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"attemptPin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.attemptPin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"remainingAmount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.remainingAmount).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemtionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].numberOfRedemtionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lifafaTxnId\", jsonData.lifafaTxnId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"1\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Shagun Chauhan\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"iPhone\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail - Invalid Transaction unique ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lifafaTxnId\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"pin\");\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid Transaction unique ID\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"The merchant provided transaction Id is invalid\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n  \"txnValue\" : \"1\",\r\n  \"txnUniqueId\": \"\",\r\n  \"bookingId\" : \"order_id1\",\r\n  \"lgcNumber\": [\"{{lgcNumber}}\"],\r\n  \"lifafaTxnId\":\"{{lifafaTxnId}}\",\r\n  \"pin\": [\"{{pin}}\"],\r\n  \"productType\":\"iPhone\",\r\n  \"txnChannel\" : \"B2C\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/redeem",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"redeem"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail - Invalid LGC Number",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - GC Validation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard validated successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"txnValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"txnUniqueId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnUniqueId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"bookingId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.bookingId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafatxnId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lifafatxnId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"attemptPin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.attemptPin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"remainingAmount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.remainingAmount).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemtionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].numberOfRedemtionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lifafaTxnId\", jsonData.lifafaTxnId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"1\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Shagun Chauhan\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"iPhone\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail - Invalid LGC Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lifafaTxnId\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"pin\");\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Wrong PIN or Lifafa txn ID supplied\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n  \"txnValue\" : \"1\",\r\n  \"txnUniqueId\": \"pay_txn_id1\",\r\n  \"bookingId\" : \"order_id1\",\r\n  \"lgcNumber\": [\"2525252\"],\r\n  \"lifafaTxnId\":\"{{lifafaTxnId}}\",\r\n  \"pin\": [\"{{pin}}\"],\r\n  \"productType\":\"iPhone\",\r\n  \"txnChannel\" : \"B2C\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/redeem",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"redeem"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail - Invalid TaxID Number",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - GC Validation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard validated successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"txnValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"txnUniqueId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnUniqueId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"bookingId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.bookingId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafatxnId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lifafatxnId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"attemptPin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.attemptPin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"remainingAmount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.remainingAmount).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemtionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].numberOfRedemtionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lifafaTxnId\", jsonData.lifafaTxnId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"1\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Shagun Chauhan\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"iPhone\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail - Invalid TaxID Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lifafaTxnId\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"pin\");\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Wrong PIN or Lifafa txn ID supplied\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n  \"txnValue\" : \"1\",\r\n  \"txnUniqueId\": \"pay_txn_id1\",\r\n  \"bookingId\" : \"order_id1\",\r\n  \"lgcNumber\": [\"{{lgcNumber}}\"],\r\n  \"lifafaTxnId\":\"Invalid\",\r\n  \"pin\": [\"{{pin}}\"],\r\n  \"productType\":\"iPhone\",\r\n  \"txnChannel\" : \"B2C\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/redeem",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"redeem"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail - Invalid PIN",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - GC Validation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard validated successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"txnValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"txnUniqueId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnUniqueId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"bookingId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.bookingId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafatxnId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lifafatxnId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"attemptPin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.attemptPin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"remainingAmount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.remainingAmount).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemtionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].numberOfRedemtionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lifafaTxnId\", jsonData.lifafaTxnId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"1\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Shagun Chauhan\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"iPhone\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail - Invalid PIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lifafaTxnId\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"pin\");\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Invalid PIN\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"You have entered wrong PIN\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n  \"txnValue\" : \"1\",\r\n  \"txnUniqueId\": \"pay_txn_id1\",\r\n  \"bookingId\" : \"order_id1\",\r\n  \"lgcNumber\": [\"{{lgcNumber}}\"],\r\n  \"lifafaTxnId\":\"{{lifafaTxnId}}\",\r\n  \"pin\": [\"Invalid\"],\r\n  \"productType\":\"iPhone\",\r\n  \"txnChannel\" : \"B2C\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/redeem",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"redeem"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail - Invalid Product Type/Mismatch",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - GC Validation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard validated successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"txnValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"txnUniqueId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnUniqueId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"bookingId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.bookingId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafatxnId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lifafatxnId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"attemptPin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.attemptPin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"remainingAmount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.remainingAmount).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemtionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].numberOfRedemtionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lifafaTxnId\", jsonData.lifafaTxnId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"1\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Shagun Chauhan\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"iPhone\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail - Invalid Product Type/Mismatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lifafaTxnId\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"pin\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"PIN has been verified and redeemed successfully\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n  \"txnValue\" : \"1\",\r\n  \"txnUniqueId\": \"pay_txn_id1\",\r\n  \"bookingId\" : \"order_id1\",\r\n  \"lgcNumber\": [\"{{lgcNumber}}\"],\r\n  \"lifafaTxnId\":\"{{lifafaTxnId}}\",\r\n  \"pin\": [\"{{pin}}\"],\r\n  \"productType\":\"iPhone\",\r\n  \"txnChannel\" : \"B2C\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/redeem",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"redeem"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail - Invalid channel Type/Mismatch",
					"item": [
						{
							"name": "Pass -  GC Creation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Creation Successful\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 5000s\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
											"});\r",
											"\r",
											"pm.test(\"firstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.firstName).to.eql(\"Nikhil\");\r",
											"});\r",
											"\r",
											"pm.test(\"lastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.lastName).to.eql(\"Kumar\");\r",
											"});\r",
											"\r",
											"pm.test(\"mobileNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.mobileNumber).to.eql(9108136936);\r",
											"});\r",
											"\r",
											"pm.test(\"email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.userDetails.email).to.eql(\"nikhil.kumar@lifafa.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"categoryName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.categoryName).to.eql(\"Xpress Mart Gifting\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].status).to.eql(\"Active\");\r",
											"});\r",
											"\r",
											"pm.test(\"pin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lgcs[0].pin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafaOrderID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.lifafaOrderID).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lgcNumber\", jsonData.data.lgcs[0].lgcNumber);\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"pin\", jsonData.data.lgcs[0].pin);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"giftCards\": [\r\n      {\r\n         \"denomination\": 10,\r\n         \"numberOfGcOrdered\": 1\r\n      }\r\n   ],\r\n   \"totalAmount\": 10,\r\n   \"referenceNumber\": \"{{$randomFullName}}\",\r\n   \"userDetails\": {\r\n      \"firstName\": \"Nikhil\",\r\n      \"lastName\": \"Kumar\",\r\n      \"mobileNumber\": 9108136936,\r\n      \"email\": \"nikhil.kumar@lifafa.com\"\r\n   },\r\n   \"category\": \"49384088-b99f-4433-9670-dc46e6212bb3\",\r\n   \"senderDetails\": {\r\n      \"firstName\": \"Lifafa\",\r\n      \"lastName\": \"Care\",\r\n      \"mobileNumber\": 9820282800,\r\n      \"email\": \"care@lifafa.com\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/create",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - Balance Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard details fetched successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.eql(\"INR\");\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"productType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.productType).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemptionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.numberOfRedemptionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"deliveryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.deliveryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"expiryDate\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.expiryDate).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"redeemAuthType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.redeemAuthType).to.eql(\"PIN\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/view/{{lgcNumber}}",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"view",
										"{{lgcNumber}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pass - GC Validation Succesful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Giftcard validated successfully\");\r",
											"});\r",
											"\r",
											"pm.test(\"txnValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnValue).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"txnUniqueId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.txnUniqueId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"bookingId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.bookingId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lifafatxnId\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lifafatxnId).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"attemptPin\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.attemptPin).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"currency\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.currency).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"remainingAmount\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.remainingAmount).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcNumber).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"numberOfRedemtionRemaining\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].numberOfRedemtionRemaining).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"status\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].status).to.be.string\r",
											"});\r",
											"\r",
											"pm.test(\"lgcValue\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.lgcs[0].lgcValue).to.be.string\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lgcNumber\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"lifafaTxnId\", jsonData.lifafaTxnId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "storeTerminalId",
										"value": "INTNN2107003S01",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"bookingId\":\"order_id1\", \r\n   \"txnValue\":\"1\",\r\n   \"txnUniqueId\":\"pay_txn_id1\",\r\n   \"currency\":\"INR\",\r\n   \"txnChannel\":\"B2C\",\r\n   \"txnBy\":\"Shagun Chauhan\",\r\n   \"lgcNumber\": \"{{lgcNumber}}\",\r\n   \"productType\":\"iPhone\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/validate",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"validate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail - Invalid channel Type/Mismatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"lifafaTxnId\");\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.environment.get(\"pin\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"success\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"PIN has been verified and redeemed successfully\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "merchantid",
										"value": "INBLR2108007",
										"type": "text"
									},
									{
										"key": "merchantpassword",
										"value": "bI8*oY7*qY6}iH8@7008012RLBNI",
										"type": "text"
									},
									{
										"key": "merchantshopcode",
										"value": "Test - Xpress Mart-shopcode",
										"type": "text"
									},
									{
										"key": "apiversion",
										"value": "v2.0",
										"type": "text"
									},
									{
										"key": "flowtype",
										"value": "2",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n  \"txnValue\" : \"1\",\r\n  \"txnUniqueId\": \"pay_txn_id1\",\r\n  \"bookingId\" : \"order_id1\",\r\n  \"lgcNumber\": [\"{{lgcNumber}}\"],\r\n  \"lifafaTxnId\":\"{{lifafaTxnId}}\",\r\n  \"pin\": [\"{{pin}}\"],\r\n  \"productType\":\"iPhone\",\r\n  \"txnChannel\" : \"B2C\"\r\n}"
								},
								"url": {
									"raw": "https://api.lifafa.team/gc-issuance/v2/redeem",
									"protocol": "https",
									"host": [
										"api",
										"lifafa",
										"team"
									],
									"path": [
										"gc-issuance",
										"v2",
										"redeem"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}